"iso25010awareness";"maintsatisfaction";"maintsymptoms[1]";"maintsymptoms[2]";"maintsymptoms[3]";"maintsymptoms[4]";"maintsymptoms[5]";"maintsymptoms[6]";"maintsymptoms[7]";"maintsymptoms[8]";"maintsymptoms[9]";"maintsymptoms[10]";"maintsymptoms[11]";"maintsymptoms[12]";"maintsymptoms[13]";"maintsymptoms[other]";"maintsubqas[1]";"maintsubqas[2]";"maintsubqas[3]";"maintsubqas[4]";"maintsubqas[5]";"mainthandling";"mainttools";"maintmetrics";"maintsbsdiff";"maintsbsdiffdetails";"maintsbsdiffreason";"swquality";"productivity";"mainttimeestimation";"role";"years";"appliedtech[SQ001]";"appliedtech[SQ002]";"appliedtech[SQ003]";"appliedtech[SQ004]";"appliedtech[SQ005]";"appliedtech[SQ006]";"employees";"companysector";"companysector[other]";"teamsize"
"I did not hear about it before.";"Yes, somewhat";"No";"No";"No";"Yes";"Yes";"Yes";"No";"No";"Yes";"No";"No";"No";"No";"0";"No";"No";"No";"Yes";"Yes";"We do not address maintainability at all.";"";"";"No";"";"We do not know. We never thought about changing something.";"";"";"Exactly the same";"Software Engineer / Developer";"6-10";"No";"No";"No";"Yes";"Yes";"No";">10000";"Telecommunication";"";"21-50"
"I am familiar with it.";"No, not at all";"Yes";"Yes";"Yes";"Yes";"Yes";"Yes";"Yes";"Yes";"No";"No";"Yes";"Yes";"No";"0";"Yes";"No";"No";"Yes";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"SonarQube";"LoC, comment ratio, clone coverage, test coverage, method size, class size";"No";"";"We do not know. We never thought about changing something.";"No, not really";"No, not really";"A lot more";"Software Engineer / Developer";"3-5";"Yes";"Yes";"Yes";"No";"Yes";"No";">10000";"Software & IT Services";"";"6-10"
"I did not hear about it before.";"Yes";"No";"No";"No";"No";"No";"Yes";"No";"No";"Yes";"No";"No";"No";"No";"0";"No";"No";"Yes";"No";"Yes";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"SonarQube";"Don't know.";"Yes, to some degree";"Services are usually broken down into Sub Focus Areas, which each eserving ist own maintainability improements. This leads to a somewhat higher Overall maintainability.";"";"Yes, very much";"Yes, somewhat";"Somewhat more";"Project Manager";"6-10";"Yes";"Yes";"No";"Yes";"No";"No";">10000";"Software & IT Services";"";"6-10"
"I did not hear about it before.";"No, not really";"No";"No";"Yes";"Yes";"No";"Yes";"No";"Yes";"No";"Yes";"Yes";"No";"No";"0";"No";"No";"Yes";"Yes";"No";"We do not address maintainability at all.";"";"";"No";"";"We wanted to, but management or the customer did not allow it.";"";"";"Somewhat more";"Software Engineer / Developer";"11-20";"Yes";"Yes";"No";"Yes";"No";"No";">10000";"Software & IT Services";"";"6-10"
"I did not hear about it before.";"No, not really";"Yes";"No";"No";"Yes";"No";"Yes";"No";"No";"Yes";"No";"No";"Yes";"No";"0";"No";"No";"No";"Yes";"Yes";"We explicitly address maintainability in a non-systematic fashion via e.g. tool support and metrics, a quality model, and/or a medium degree of team-wide standardization.";"custom";"not sure";"Yes, to some degree";"not sure";"";"Yes, somewhat";"No, not really";"Somewhat more";"People Manager / Team Lead";"3-5";"No";"Yes";"No";"Yes";"Yes";"No";">10000";"Software & IT Services";"";"21-50"
"I heard about it, but am not really familiar with its details.";"Yes";"No";"Yes";"No";"Yes";"No";"No";"Yes";"Yes";"No";"No";"Yes";"No";"No";"0";"No";"Yes";"No";"Yes";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";" FindBugs
Jardiff";"Coupling metrics";"Yes, to some degree";"Metrics are considered as input to develop maintainability prediction model.";"";"Yes, very much";"Yes";"Somewhat more";"Professor / Lecturer / Coach";"3-5";"Yes";"No";"No";"No";"No";"No";"I do not work at a company";"";"";"1-5"
"I heard about it, but am not really familiar with its details.";"No, not really";"No";"No";"Yes";"Yes";"No";"No";"No";"No";"Yes";"No";"No";"No";"No";"0";"No";"No";"Yes";"No";"Yes";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"SonarQube";"none";"No";"";"We thought about it, but do not exactly know what to change.";"Yes";"Yes, somewhat";"Somewhat more";"Project Manager";"6-10";"N/A";"N/A";"N/A";"N/A";"N/A";"Yes";"1001-5000";"Software & IT Services";"";"6-10"
"I heard about it, but am not really familiar with its details.";"Yes, somewhat";"No";"No";"Yes";"Yes";"No";"No";"No";"No";"No";"No";"No";"No";"No";"0";"No";"No";"No";"Yes";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"FindBugs";"LoC";"No";"";"We do not know. We never thought about changing something.";"Yes, somewhat";"Yes, somewhat";"Somewhat more";"Consultant";"3-5";"N/A";"N/A";"N/A";"N/A";"N/A";"Yes";"26-100";"Software & IT Services";"";"1-5"
"I heard about it, but am not really familiar with its details.";"Yes, somewhat";"No";"Yes";"Yes";"Yes";"No";"Yes";"No";"No";"No";"Yes";"Yes";"No";"No";"0";"No";"Yes";"No";"Yes";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"Asana, Subversion";"";"No";"";"We thought about it, but do not exactly know what to change.";"Yes, somewhat";"No, not at all";"A lot more";"Project Manager";"6-10";"Yes";"No";"Yes";"No";"No";"No";"26-100";"Software & IT Services";"";"6-10"
"I did not hear about it before.";"No, not at all";"Yes";"No";"No";"Yes";"No";"No";"Yes";"No";"Yes";"No";"Yes";"No";"No";"0";"Yes";"No";"No";"No";"Yes";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"Generic development guidelines, no particular software";"n/a";"Yes, to some degree";"Process / Tools: Generic development architecture, interfaces, modularity";"";"Yes";"No, not really";"A lot more";"Software Architect / Technical Designer";"3-5";"Yes";"Yes";"No";"Yes";"Yes";"No";"1001-5000";"Software & IT Services";"";"21-50"
"I did not hear about it before.";"Yes, somewhat";"No";"No";"No";"Yes";"No";"Yes";"No";"No";"No";"Yes";"No";"No";"No";"0";"Yes";"No";"No";"Yes";"No";"We do not address maintainability at all.";"";"";"No";"";"We do not know. We never thought about changing something.";"";"";"Exactly the same";"Software Engineer / Developer";"3-5";"N/A";"N/A";"N/A";"N/A";"N/A";"Yes";"I do not work at a company";"";"";"1-5"
"It is used as the base model for quality evaluation in my projects.";"Yes, somewhat";"Yes";"Yes";"No";"No";"Yes";"No";"Yes";"Yes";"No";"Yes";"Yes";"No";"No";"0";"Yes";"No";"No";"No";"Yes";"We explicitly address maintainability by enforcing a structured process, tool support, and a high degree of team-wide standardization.";"grunt, gulp, webpack";"static anayzer (fit 100%) to enforce code readability for next developers
";"Yes, to some degree";"different programming languages, different platforms require different techniques";"";"No, not at all";"No, not at all";"Somewhat more";"Professor / Lecturer / Coach";">20";"Yes";"Yes";"Yes";"Yes";"Yes";"No";"1001-5000";"Other";"currently education before (20 years) Software industry (developer, management, consultant)";"11-20"
"I did not hear about it before.";"Yes";"No";"Yes";"No";"No";"No";"Yes";"Yes";"No";"No";"No";"No";"Yes";"No";"0";"No";"No";"No";"Yes";"Yes";"We explicitly address maintainability in a non-systematic fashion via e.g. tool support and metrics, a quality model, and/or a medium degree of team-wide standardization.";"SonarQube, FindBugs";"cyclomatic complexity, coupling metrics";"Yes, to some degree";"process";"";"Yes";"No, not really";"Somewhat more";"Software Engineer / Developer";"11-20";"Yes";"Yes";"No";"No";"Yes";"No";">10000";"Software & IT Services";"";"11-20"
"I heard about it, but am not really familiar with its details.";"No, not really";"Yes";"No";"No";"No";"Yes";"No";"No";"No";"No";"No";"No";"No";"No";"0";"Yes";"No";"No";"No";"Yes";"We do not address maintainability at all.";"";"";"No";"";"We do not know. We never thought about changing something.";"";"";"Exactly the same";"Student (Computer Science / Software Engineering / Information Systems / etc.)";"3-5";"No";"No";"No";"Yes";"No";"No";"101-1000";"Other";"Research";"6-10"
"I did not hear about it before.";"Yes, somewhat";"Yes";"Yes";"Yes";"No";"No";"Yes";"Yes";"No";"Yes";"No";"No";"No";"No";"0";"No";"No";"Yes";"No";"Yes";"We explicitly address maintainability in a non-systematic fashion via e.g. tool support and metrics, a quality model, and/or a medium degree of team-wide standardization.";"The team developed some basic tool support to repeatedly and systematically measure the software quality. However, the tool delivered only rudimentary metrics as a first step in this process.";"It's a data-driven approach. We have defined some thresholds. After a test run we looked to for data inconsistencies, i.e. where the thresholds defining reasonable results were violated.";"No";"";"We do not know. We never thought about changing something.";"Yes, somewhat";"No, not really";"A lot more";"People Manager / Team Lead";"6-10";"No";"Yes";"No";"Yes";"No";"No";"101-1000";"Software & IT Services";"";"6-10"
"I did not hear about it before.";"No, not really";"Yes";"No";"No";"No";"No";"Yes";"Yes";"No";"Yes";"No";"No";"No";"No";"0";"No";"No";"No";"Yes";"Yes";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"";"";"No";"";"We do not know. We never thought about changing something.";"No, not at all";"No, not at all";"A lot less";"Software Engineer / Developer";"1-2";"Yes";"Yes";"No";"Yes";"Yes";"No";"26-100";"Manufacturing";"";"1-5"
"I did not hear about it before.";"Yes, somewhat";"No";"No";"No";"Yes";"No";"Yes";"Yes";"Yes";"No";"No";"Yes";"No";"No";"0";"No";"No";"No";"Yes";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"";"";"No";"";"We do not know. We never thought about changing something.";"Yes";"Yes, somewhat";"Somewhat more";"Software Engineer / Developer";"3-5";"No";"No";"No";"Yes";"No";"No";">10000";"Software & IT Services";"";"6-10"
"I did not hear about it before.";"Yes";"N/A";"N/A";"N/A";"N/A";"N/A";"N/A";"N/A";"N/A";"N/A";"N/A";"N/A";"N/A";"Yes";"";"N/A";"N/A";"N/A";"N/A";"N/A";"We explicitly address maintainability by enforcing a structured process, tool support, and a high degree of team-wide standardization.";"SonarQube, FindBugs";"Not really sure, was not my responsibility, but definitely not LOC";"No";"";"We see no merit in doing something differently. Our standard approach is sufficient.";"Yes, somewhat";"No, not really";"Somewhat more";"People Manager / Team Lead";">20";"Yes";"Yes";"Yes";"Yes";"Yes";"No";">10000";"Software & IT Services";"";">50"
"I heard about it, but am not really familiar with its details.";"Yes";"N/A";"N/A";"N/A";"N/A";"N/A";"N/A";"N/A";"N/A";"N/A";"N/A";"N/A";"N/A";"Yes";"";"N/A";"N/A";"N/A";"N/A";"N/A";"We explicitly address maintainability in a non-systematic fashion via e.g. tool support and metrics, a quality model, and/or a medium degree of team-wide standardization.";"";"";"No";"";"We do not know. We never thought about changing something.";"No, not at all";"No, not at all";"Exactly the same";"Professor / Lecturer / Coach";"3-5";"Yes";"Yes";"No";"Yes";"Yes";"No";"26-100";"Retail";"";"6-10"
"I did not hear about it before.";"Yes";"No";"No";"No";"Yes";"No";"No";"Yes";"Yes";"No";"No";"No";"No";"No";"0";"No";"No";"Yes";"No";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"";"";"No";"";"We see no merit in doing something differently. Our standard approach is sufficient.";"Yes, somewhat";"Yes";"Somewhat more";"Software Engineer / Developer";"3-5";"Yes";"Yes";"No";"No";"No";"No";">10000";"Automotive";"";"1-5"
"I am familiar with it.";"No, not at all";"Yes";"Yes";"No";"No";"No";"Yes";"No";"No";"No";"Yes";"No";"Yes";"No";"0";"No";"No";"No";"Yes";"No";"We explicitly address maintainability in a non-systematic fashion via e.g. tool support and metrics, a quality model, and/or a medium degree of team-wide standardization.";"VersionEye, Checkstyle, Travis-CI, Codacy, CodeCov, ErrorProne";"No ""metrics"" per se, but the properties that we check as an absolute minimum for changes are:
 - No checkstyle issues in new code
 - Test coverage does not decrease";"Yes, to some degree";"The service-related code is usually new/rewritten and we take more care about new code these days. This is not so much due to service-orientation, but more due to the fact that we take more care about the quality of new code than in the years before.";"";"Yes, very much";"No, not really";"Somewhat more";"Software Engineer / Developer";"11-20";"Yes";"Yes";"No";"Yes";"Yes";"No";"1-25";"Software & IT Services";"";"1-5"
"I heard about it, but am not really familiar with its details.";"Yes";"Yes";"No";"No";"No";"No";"No";"No";"Yes";"No";"No";"No";"No";"No";"0";"Yes";"No";"Yes";"No";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"";"LOC, Comment coverage";"No";"";"We see no merit in doing something differently. Our standard approach is sufficient.";"Yes, somewhat";"No, not really";"Somewhat more";"Software Architect / Technical Designer";"3-5";"Yes";"Yes";"No";"Yes";"Yes";"No";"1001-5000";"Software & IT Services";"";"1-5"
"I did not hear about it before.";"No, not at all";"No";"Yes";"Yes";"Yes";"No";"Yes";"Yes";"No";"Yes";"Yes";"Yes";"Yes";"No";"0";"Yes";"No";"Yes";"No";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"SonarQube, Resharper";"";"No";"";"We do not know. We never thought about changing something.";"Yes, somewhat";"No, not really";"A lot more";"Requirements Engineer";"3-5";"Yes";"Yes";"Yes";"Yes";"No";"No";"1001-5000";"Software & IT Services";"";"1-5"
"I did not hear about it before.";"Yes, somewhat";"Yes";"No";"Yes";"No";"No";"Yes";"Yes";"No";"No";"No";"No";"Yes";"No";"0";"No";"No";"No";"Yes";"Yes";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"SonarQube, CAST";"Test coverage";"No";"";"We see no merit in doing something differently. Our standard approach is sufficient.";"Yes, somewhat";"No, not at all";"Somewhat more";"Software Architect / Technical Designer";"11-20";"Yes";"Yes";"Yes";"Yes";"Yes";"No";">10000";"Software & IT Services";"";">50"
"I heard about it, but am not really familiar with its details.";"Yes, somewhat";"No";"Yes";"Yes";"Yes";"No";"No";"No";"No";"No";"No";"No";"No";"No";"0";"No";"Yes";"Yes";"No";"No";"We explicitly address maintainability by enforcing a structured process, tool support, and a high degree of team-wide standardization.";"";"";"No";"";"We do not know. We never thought about changing something.";"Yes, somewhat";"No, not really";"Exactly the same";"Consultant";"1-2";"Yes";"Yes";"No";"No";"No";"No";">10000";"Software & IT Services";"";"6-10"
"I heard about it, but am not really familiar with its details.";"Yes";"No";"No";"Yes";"No";"Yes";"No";"No";"Yes";"Yes";"Yes";"No";"No";"No";"0";"Yes";"Yes";"No";"No";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"Teamscale";"Clone coverage";"No";"";"We see no merit in doing something differently. Our standard approach is sufficient.";"Yes, somewhat";"Yes, somewhat";"Somewhat more";"Consultant";"6-10";"Yes";"Yes";"No";"Yes";"No";"No";">10000";"Other";"Logistics";"11-20"
"I heard about it, but am not really familiar with its details.";"Yes, somewhat";"No";"No";"Yes";"No";"No";"No";"No";"No";"No";"No";"No";"No";"No";"0";"No";"No";"No";"Yes";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"Lattix";"LoC";"No";"";"We thought about it, but do not exactly know what to change.";"Yes, somewhat";"Yes, somewhat";"Somewhat less";"People Manager / Team Lead";"6-10";"No";"No";"Yes";"No";"No";"No";"26-100";"Hardware & Semiconductors";"";"21-50"
"I heard about it, but am not really familiar with its details.";"No, not really";"No";"Yes";"No";"Yes";"No";"Yes";"No";"No";"No";"No";"No";"No";"No";"0";"No";"Yes";"Yes";"No";"No";"We explicitly address maintainability in a non-systematic fashion via e.g. tool support and metrics, a quality model, and/or a medium degree of team-wide standardization.";"";"";"No";"";"We do not know. We never thought about changing something.";"Yes";"No, not really";"Somewhat more";"Project Manager";"1-2";"N/A";"N/A";"N/A";"N/A";"N/A";"Yes";">10000";"Automotive";"";"1-5"
"I heard about it, but am not really familiar with its details.";"No, not really";"Yes";"No";"No";"Yes";"No";"Yes";"Yes";"No";"Yes";"Yes";"No";"No";"No";"0";"No";"Yes";"No";"Yes";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"SonarQube, Gerrit to organize Code Reviews";"test coverage, number of architecture violations (i.e. illegal dependencies), clone coverage";"No";"";"We do not know. We never thought about changing something.";"Yes, very much";"No, not at all";"A lot more";"Software Architect / Technical Designer";"11-20";"Yes";"Yes";"Yes";"Yes";"Yes";"No";">10000";"Software & IT Services";"";"21-50"
"I did not hear about it before.";"Yes, somewhat";"Yes";"Yes";"No";"No";"No";"No";"Yes";"No";"No";"No";"No";"No";"No";"0";"Yes";"No";"Yes";"No";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"";"";"Yes, significantly";"Higher flexibility and scalability";"";"Yes";"No, not really";"Somewhat more";"Consultant";"3-5";"No";"No";"No";"Yes";"Yes";"No";">10000";"Automotive";"";"1-5"
"I did not hear about it before.";"Yes, very much";"Yes";"No";"No";"No";"No";"Yes";"No";"Yes";"No";"Yes";"No";"No";"No";"0";"No";"Yes";"No";"No";"Yes";"We explicitly address maintainability by enforcing a structured process, tool support, and a high degree of team-wide standardization.";"Sonar rules for code coverage, and daily health check of services using Jenkins and automation tool (CA Lisa workstation Dev test)  ";"";"No";"";"We thought about it, but do not exactly know what to change.";"Yes, very much";"Yes";"Somewhat more";"Software Engineer / Developer";"3-5";"No";"Yes";"Yes";"No";"Yes";"No";">10000";"Software & IT Services";"";"1-5"
"I am familiar with it.";"Yes, somewhat";"Yes";"No";"No";"No";"No";"No";"Yes";"No";"No";"No";"No";"No";"No";"0";"No";"No";"Yes";"No";"Yes";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"";"";"No";"";"We do not know. We never thought about changing something.";"No, not really";"Yes, somewhat";"Somewhat less";"Software Engineer / Developer";"3-5";"No";"Yes";"No";"No";"No";"No";"1-25";"Software & IT Services";"";"1-5"
"I am familiar with it.";"Yes, somewhat";"No";"Yes";"Yes";"No";"No";"Yes";"No";"No";"Yes";"No";"Yes";"No";"No";"0";"Yes";"No";"Yes";"No";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"SonarQube";"cyclomatic complexity, test coverage";"No";"";"We see no merit in doing something differently. Our standard approach is sufficient.";"Yes";"No, not at all";"Somewhat more";"Project Manager";"3-5";"No";"Yes";"Yes";"Yes";"No";"No";">10000";"Automotive";"";"6-10"
"I did not hear about it before.";"Yes, somewhat";"No";"Yes";"No";"Yes";"No";"No";"Yes";"No";"Yes";"Yes";"Yes";"Yes";"No";"0";"No";"No";"Yes";"Yes";"No";"We explicitly address maintainability in a non-systematic fashion via e.g. tool support and metrics, a quality model, and/or a medium degree of team-wide standardization.";"FindBugs
JMetrics
HPE ALM Suite";"Identifies Naming Conventions
Tracing/Logging Capabilities
Code Coverage
Scenario/Feature Coverage
Unit Tests
";"Yes, significantly";"Adapting SCRUM framework/methodologies
using HPE Agile Manager Tool";"";"Yes";"Yes, somewhat";"Somewhat more";"Software Engineer / Developer";"3-5";"No";"No";"Yes";"Yes";"No";"No";">10000";"Software & IT Services";"";"11-20"
"I heard about it, but am not really familiar with its details.";"No, not really";"Yes";"Yes";"No";"Yes";"Yes";"No";"No";"No";"Yes";"Yes";"No";"No";"No";"0";"Yes";"Yes";"No";"No";"No";"We do not address maintainability at all.";"";"";"No";"";"We see no merit in doing something differently. Our standard approach is sufficient.";"";"";"Somewhat less";"Consultant";"3-5";"Yes";"Yes";"No";"No";"No";"No";">10000";"Software & IT Services";"";">50"
"I am familiar with it.";"Yes";"Yes";"No";"No";"Yes";"Yes";"No";"Yes";"No";"Yes";"Yes";"Yes";"Yes";"No";"0";"Yes";"No";"Yes";"No";"No";"We explicitly address maintainability in a non-systematic fashion via e.g. tool support and metrics, a quality model, and/or a medium degree of team-wide standardization.";"SonarQube, static code analysis (PMD, Checkstyle)";"clone and test coverage";"Yes, significantly";"Each micro service can be implemented with different languages thus we might also need different tools. Also the processes (especially the deployment process) changes.";"";"Yes, somewhat";"No, not really";"Exactly the same";"Requirements Engineer";"3-5";"Yes";"Yes";"Yes";"Yes";"Yes";"No";"101-1000";"Software & IT Services";"";"1-5"
"I heard about it, but am not really familiar with its details.";"No, not at all";"Yes";"Yes";"No";"Yes";"No";"Yes";"No";"No";"Yes";"No";"No";"Yes";"No";"0";"Yes";"No";"Yes";"No";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"SonarQube";"Cyclomatic Complexity, cohesion";"Yes, to some degree";"Tools, Metrics ";"";"Yes";"Yes, somewhat";"Somewhat more";"Project Manager";"11-20";"Yes";"Yes";"Yes";"Yes";"Yes";"No";">10000";"Automotive";"";"11-20"
"I am familiar with it.";"Yes, somewhat";"No";"No";"Yes";"No";"No";"Yes";"No";"No";"Yes";"Yes";"No";"No";"No";"0";"No";"No";"No";"Yes";"No";"We explicitly address maintainability by enforcing a structured process, tool support, and a high degree of team-wide standardization.";"Sissy, FindBugs, good Architecture :-)
appropriate design patterns to support expected evolution / modification scenarios";"test coverarge, cohesion, coupling, use of appropriate patterns.";"Yes, to some degree";"code duplication, duplicated functionality is acceptable to a certain degree in micro-servoce architectures";"";"Yes";"No, not really";"Somewhat more";"Professor / Lecturer / Coach";">20";"Yes";"No";"No";"No";"Yes";"No";"101-1000";"Software & IT Services";"";"11-20"
"I heard about it, but am not really familiar with its details.";"Yes, somewhat";"Yes";"No";"No";"No";"No";"Yes";"No";"No";"No";"Yes";"Yes";"No";"No";"0";"No";"Yes";"No";"Yes";"No";"We explicitly address maintainability in a non-systematic fashion via e.g. tool support and metrics, a quality model, and/or a medium degree of team-wide standardization.";"N / A since we used a special development plattform that was based on UML-modelling - therfore noexternal tools could be used";"depencency of modules, degree of functional redundancy";"Yes, to some degree";"Service based developmen reduced the broblem of dependncies and cycles). 
";"";"Yes";"Yes, somewhat";"Somewhat more";"Professor / Lecturer / Coach";"11-20";"Yes";"Yes";"Yes";"No";"No";"No";"5001-10000";"Energy & Utilities";"";"6-10"
"I did not hear about it before.";"No, not at all";"No";"Yes";"Yes";"Yes";"Yes";"Yes";"Yes";"No";"Yes";"Yes";"Yes";"Yes";"No";"0";"Yes";"No";"No";"No";"Yes";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"Sonar";" cyclomatic complexity,   test coverage";"No";"";"We thought about it, but do not exactly know what to change.";"Yes";"No, not really";"Somewhat more";"Software Engineer / Developer";"11-20";"No";"Yes";"No";"Yes";"Yes";"No";">10000";"Software & IT Services";"";"21-50"
"I did not hear about it before.";"Yes, somewhat";"No";"No";"No";"No";"No";"Yes";"Yes";"No";"No";"Yes";"No";"Yes";"No";"missing logging";"No";"No";"No";"No";"Yes";"We explicitly address maintainability in a non-systematic fashion via e.g. tool support and metrics, a quality model, and/or a medium degree of team-wide standardization.";"SonarQube, FindBugs, Cobertura";"test coverage, defect resolution time";"No";"";"We see no merit in doing something differently. Our standard approach is sufficient.";"Yes";"No, not really";"Somewhat more";"Software Engineer / Developer";"3-5";"No";"Yes";"Yes";"Yes";"Yes";"No";"5001-10000";"Software & IT Services";"";"6-10"
"I did not hear about it before.";"No, not really";"No";"Yes";"Yes";"Yes";"Yes";"Yes";"Yes";"Yes";"No";"Yes";"No";"Yes";"No";"0";"No";"No";"No";"Yes";"Yes";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"SonarQube";"test coverage";"No";"";"We do not know. We never thought about changing something.";"Yes, somewhat";"No, not at all";"A lot more";"Software Engineer / Developer";">20";"No";"Yes";"Yes";"Yes";"Yes";"No";">10000";"Software & IT Services";"";"6-10"
"I did not hear about it before.";"Yes, somewhat";"No";"Yes";"No";"No";"No";"Yes";"No";"No";"No";"No";"Yes";"Yes";"No";"0";"No";"Yes";"No";"Yes";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"Sonar";"";"No";"";"We see no merit in doing something differently. Our standard approach is sufficient.";"Yes, very much";"Yes, somewhat";"Somewhat more";"People Manager / Team Lead";"11-20";"Yes";"Yes";"No";"Yes";"Yes";"No";">10000";"Software & IT Services";"";"6-10"
"I did not hear about it before.";"Yes";"No";"No";"No";"Yes";"No";"No";"Yes";"No";"No";"No";"No";"No";"No";"0";"No";"No";"Yes";"No";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"SonarQube, JUnit-Tests";"test coverage";"Yes, to some degree";"testing in 2 stages: modular on the Services and Integration Tests for the whole system";"";"Yes";"No, not really";"Somewhat more";"Software Engineer / Developer";"3-5";"Yes";"Yes";"Yes";"Yes";"No";"No";"101-1000";"Software & IT Services";"";"11-20"
"I did not hear about it before.";"Yes";"Yes";"Yes";"No";"No";"No";"No";"Yes";"No";"No";"No";"No";"No";"No";"0";"No";"No";"Yes";"No";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"SonarQube";"Clone coverage, comment ratio";"No";"";"We do not know. We never thought about changing something.";"Yes";"No, not really";"Somewhat more";"Student (Computer Science / Software Engineering / Information Systems / etc.)";"1-2";"No";"Yes";"No";"Yes";"No";"No";"101-1000";"Software & IT Services";"";"6-10"
"I did not hear about it before.";"Yes, somewhat";"Yes";"Yes";"Yes";"Yes";"No";"No";"No";"No";"Yes";"No";"No";"Yes";"No";"0";"No";"No";"Yes";"No";"Yes";"We explicitly address maintainability by enforcing a structured process, tool support, and a high degree of team-wide standardization.";"";"";"No";"";"We thought about it, but do not exactly know what to change.";"Yes";"Yes";"Somewhat more";"Project Manager";"1-2";"Yes";"Yes";"Yes";"Yes";"Yes";"No";">10000";"Automotive";"";"6-10"
"I did not hear about it before.";"No, not really";"No";"Yes";"No";"Yes";"No";"No";"No";"Yes";"No";"No";"No";"Yes";"No";"0";"No";"Yes";"No";"No";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"";"";"No";"";"We thought about it, but do not exactly know what to change.";"Yes, somewhat";"No, not really";"Somewhat more";"Consultant";">20";"Yes";"Yes";"No";"Yes";"Yes";"No";">10000";"Software & IT Services";"";"6-10"
"I am familiar with it.";"Yes, somewhat";"No";"No";"No";"Yes";"No";"No";"No";"No";"No";"No";"Yes";"No";"No";"0";"No";"No";"Yes";"No";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"HP Fortify SCA";"code coverage , Test coverage";"No";"";"We do not know. We never thought about changing something.";"Yes";"No, not really";"Somewhat more";"Software Engineer / Developer";"6-10";"No";"No";"No";"Yes";"No";"No";"1001-5000";"Software & IT Services";"";"11-20"
"I did not hear about it before.";"No, not at all";"No";"Yes";"Yes";"No";"No";"Yes";"Yes";"No";"No";"No";"No";"No";"No";"0";"Yes";"No";"No";"No";"Yes";"We explicitly address maintainability by enforcing a structured process, tool support, and a high degree of team-wide standardization.";"";"";"No";"";"We do not know. We never thought about changing something.";"Yes";"Yes, somewhat";"Exactly the same";"Requirements Engineer";"3-5";"No";"Yes";"No";"No";"No";"No";"101-1000";"Software & IT Services";"";"11-20"
"I did not hear about it before.";"No, not really";"No";"Yes";"Yes";"Yes";"Yes";"No";"Yes";"No";"No";"Yes";"Yes";"No";"No";"0";"No";"No";"Yes";"No";"Yes";"We explicitly address maintainability in a non-systematic fashion via e.g. tool support and metrics, a quality model, and/or a medium degree of team-wide standardization.";"-";"-";"Yes, to some degree";"-";"";"Yes";"No, not really";"A lot more";"Software Engineer / Developer";"11-20";"Yes";"Yes";"Yes";"Yes";"No";"No";">10000";"Software & IT Services";"";">50"
"I did not hear about it before.";"Yes";"No";"No";"No";"No";"No";"No";"No";"No";"Yes";"No";"No";"No";"No";"0";"No";"No";"No";"No";"Yes";"We explicitly address maintainability in a non-systematic fashion via e.g. tool support and metrics, a quality model, and/or a medium degree of team-wide standardization.";"None";"None";"No";"";"We do not know. We never thought about changing something.";"Yes, somewhat";"Yes, somewhat";"Somewhat less";"Software Architect / Technical Designer";">20";"No";"No";"No";"Yes";"No";"No";">10000";"Software & IT Services";"";"1-5"
"I did not hear about it before.";"No, not really";"Yes";"No";"Yes";"Yes";"No";"Yes";"Yes";"Yes";"No";"Yes";"Yes";"Yes";"No";"0";"Yes";"No";"No";"No";"Yes";"We explicitly address maintainability by enforcing a structured process, tool support, and a high degree of team-wide standardization.";"SonarQube, FindBugs";"Test coverage, code complexity";"Yes, to some degree";"Low dependencies involved and simpler process with service-based system";"";"Yes, somewhat";"Yes, somewhat";"Somewhat more";"Project Manager";"11-20";"No";"Yes";"No";"Yes";"Yes";"No";">10000";"Software & IT Services";"";"6-10"
"I did not hear about it before.";"No, not really";"No";"Yes";"No";"Yes";"No";"No";"Yes";"No";"No";"No";"Yes";"Yes";"No";"0";"No";"Yes";"Yes";"No";"No";"We do not address maintainability at all.";"";"";"No";"";"We do not know. We never thought about changing something.";"";"";"Somewhat less";"Software Engineer / Developer";"11-20";"No";"Yes";"No";"Yes";"No";"No";"5001-10000";"Software & IT Services";"";"11-20"
"I heard about it, but am not really familiar with its details.";"No, not really";"No";"Yes";"No";"No";"No";"No";"Yes";"No";"No";"No";"No";"Yes";"No";"0";"Yes";"No";"No";"Yes";"No";"We explicitly address maintainability in a non-systematic fashion via e.g. tool support and metrics, a quality model, and/or a medium degree of team-wide standardization.";"";"";"No";"";"We do not know. We never thought about changing something.";"Yes, somewhat";"No, not really";"Somewhat more";"Software Engineer / Developer";">20";"Yes";"Yes";"Yes";"Yes";"Yes";"No";">10000";"Software & IT Services";"";"11-20"
"I heard about it, but am not really familiar with its details.";"Yes, somewhat";"No";"No";"No";"Yes";"No";"No";"No";"No";"No";"No";"No";"No";"No";"0";"No";"Yes";"No";"No";"Yes";"We explicitly address maintainability in a non-systematic fashion via e.g. tool support and metrics, a quality model, and/or a medium degree of team-wide standardization.";"Svn";"Quality metrics";"Yes, to some degree";"Nothing as such";"";"Yes, somewhat";"Yes, somewhat";"Exactly the same";"People Manager / Team Lead";"11-20";"No";"No";"No";"Yes";"No";"No";">10000";"Telecommunication";"";"6-10"
"I heard about it, but am not really familiar with its details.";"Yes";"No";"No";"No";"Yes";"Yes";"No";"Yes";"Yes";"No";"Yes";"Yes";"Yes";"No";"0";"Yes";"No";"No";"Yes";"No";"We explicitly address maintainability by enforcing a structured process, tool support, and a high degree of team-wide standardization.";"SonarQube, Jenkins";"Test Coverage, Sonar Reports, Cyclomatic Complexity, ";"Yes, to some degree";"We use more integration component testing. The micro services are designed not just doing test driven development (TDD) but also using Behavior Driven Development (BDD) using JBehave for example.";"";"Yes, very much";"No, not really";"Somewhat more";"Software Architect / Technical Designer";"6-10";"Yes";"Yes";"No";"Yes";"Yes";"No";">10000";"Software & IT Services";"";"6-10"
"I did not hear about it before.";"No, not really";"No";"Yes";"Yes";"Yes";"No";"No";"Yes";"Yes";"No";"Yes";"Yes";"No";"No";"0";"No";"No";"Yes";"No";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"SonarQube, FindBugs";"cyclomatic complexity, test coverage";"No";"";"We do not know. We never thought about changing something.";"Yes";"Yes, somewhat";"Somewhat more";"Software Engineer / Developer";">20";"Yes";"Yes";"Yes";"Yes";"Yes";"No";"101-1000";"Software & IT Services";"";"6-10"
"I did not hear about it before.";"No, not at all";"No";"No";"No";"Yes";"No";"Yes";"Yes";"Yes";"No";"Yes";"Yes";"Yes";"No";"0";"Yes";"No";"No";"Yes";"No";"We somewhat implicitly address maintainability via e.g. basic refactoring and/or some team-wide standardization.";"SonarQube, FindBugs, CheckStyle, PMD";"test coverage, cyclomatic complexity";"Yes, significantly";"micro services are new code, thus no legacy stuff to worry about. From scratch things can be done finally the right way";"";"Yes";"No, not really";"Exactly the same";"Software Engineer / Developer";"6-10";"Yes";"Yes";"Yes";"Yes";"Yes";"No";"101-1000";"Software & IT Services";"";"1-5"
"I did not hear about it before.";"No, not really";"No";"Yes";"No";"No";"No";"Yes";"Yes";"No";"No";"No";"No";"No";"No";"Several areas are not covered, since the corresponding experts left the team";"No";"Yes";"No";"Yes";"No";"We do not address maintainability at all.";"";"";"No";"";"We do not know. We never thought about changing something.";"";"";"Somewhat more";"Software Engineer / Developer";">20";"No";"Yes";"No";"Yes";"No";"No";">10000";"Software & IT Services";"";"11-20"
"I heard about it, but am not really familiar with its details.";"Yes";"Yes";"No";"No";"Yes";"No";"No";"Yes";"No";"No";"No";"No";"No";"No";"0";"No";"No";"Yes";"No";"Yes";"We explicitly address maintainability by enforcing a structured process, tool support, and a high degree of team-wide standardization.";"SonarQube

";"";"Yes, to some degree";"- dedicated reference architecture for all developed services that focuses among other things on a clear separation of concerns between business logic and framework/technology-specific code 
-mdsd approaches for infrastructure code";"";"Yes, somewhat";"No, not really";"Somewhat more";"Software Architect / Technical Designer";"11-20";"Yes";"Yes";"Yes";"Yes";"Yes";"No";"101-1000";"Finance & Insurance";"";"6-10"

